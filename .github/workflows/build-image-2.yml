name: Build New Image Version
on:
  # Manually call
  workflow_dispatch:
    inputs:
      release-type:
        required: true
        type: choice
        description: Type of release
        options:
          - patch
          - minor
          - major
      base-version:
        required: true
        description: Base version
      target-version:
        required: true
        description: Target version
  # Call from other workflow
  workflow_call:
    inputs:
      release-type:
        type: string
        required: true
      base-version:
        type: string
        required: true
      target-version:
        type: string
        required: true
defaults:
  run:
    shell: bash -l {0}
jobs:
  open-pr:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: write
    outputs:
      pr_id: ${{ steps.open_pr.outputs.pr_id }}
    steps:
      - uses: actions/checkout@v3
      - uses: mamba-org/setup-micromamba@v1
        with:
          environment-file: ./environment.yml
          environment-name: sagemaker-distribution
          init-shell: bash
      - name: Free up disk space
        run: rm -rf /opt/hostedtoolcache
      - name: Activate sagemaker-distribution
        run: micromamba activate sagemaker-distribution
      - name: Create new branch
        run: git checkout -b release-${{github.event.inputs.target-version}}
      - name: Generate artifacts
        run: python ./src/main.py create-${{ github.event.inputs.release-type }}-version-artifacts --base-patch-version ${{ github.event.inputs.base-version }}
      - name: Commit .in artifacts to branch
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add ./build_artifacts
          git commit -m 'chore: Generate build artifacts for ${{ github.event.inputs.target-version }} release'
          git push --set-upstream origin release-${{github.event.inputs.target-version}}
      - name: Open pull request
        id: open_pr
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          URL=$(gh pr create -H release-${{github.event.inputs.target-version}} \
                    --title 'release: v${{github.event.inputs.target-version}}' --body 'Created by GitHub Action')
          PR=$(echo $URL | sed 's:.*/::')
          echo "pr_id=$PR" >> $GITHUB_OUTPUT
  call-codebuild-project:
    runs-on: ubuntu-latest
    if: github.repository == 'aws/sagemaker-distribution'
    permissions:
      pull-requests: write
      contents: write
      id-token: write
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::428449107377:role/SMDistroUnitTestingRole
          aws-region: us-west-2
      - name: Run CodeBuild
        uses: dark-mechanicum/aws-codebuild@v1
        env:
          CODEBUILD__sourceVersion: 'pr/${{needs.open-pr.outputs.pr_id}}'
        with:
          projectName: cosmos-unit-testing
          buildspec: '{
              "environmentVariablesOverride":[
                { "name":"PR_ID", "value":"${{needs.open-pr.outputs.pr_id}}", "type": "PLAINTEXT" },
                { "name":"TARGET_VERSION", "value":"${{needs.open-pr.outputs.pr_id}}", "type": "PLAINTEXT" },
                { "name":"RELEASE_TYPE", "value":"${{needs.open-pr.outputs.pr_id}}", "type": "PLAINTEXT" },
              ],
            }'